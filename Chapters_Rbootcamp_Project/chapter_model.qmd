---
editor: 
  markdown: 
    wrap: 72
---

## Chapter 'fitting a linear regression model and visualize it'

### Data visualization

We want to find out how Google Searches for 'iPhone' in different
countries are related. Are days with many searches for iPhone in the US
also days with many searches in Germany? We would expect so as iPhone is
a global topic and news, e.g. the launch of a new iPhone version, swap
across the globe in no time. But still, let's check if we can proof it
with the data.

First we do a line graph comparing the Google Trends data for iPhone
country by country. To get a nicer graph we aggregate the data from
daily to weekly.

```{r echo=FALSE, message=FALSE}

library(tidyverse)
library(corrplot)
# library(patchwork)

trends_combined <- read.csv("trends_combined_wide.csv")

## Prepare data for weekly line graph
trends_combined_week <- trends_combined %>%
  mutate(week = floor_date(ymd(date), "week")) %>% 
  group_by(week, country) %>% 
  summarise(iPhone = sum(iPhone, na.rm = TRUE),
            .groups = 'drop')          

## Make the weekly line graph
ggplot(data = trends_combined_week, aes(x = week, y = iPhone, color = country)) +
  geom_line() +
  labs(
    title = "Google Search Interest Over Time",
    x = "Date",
    y = "Relative Search Interest (0-100)",
    color = "Country"
  )

```

As we can see the relative search interest in 'iPhone' is moving quite
similar in all five countries. Now we want do check with a model how
close two countries are related. We pick US and Germany as we are most
interested in these countries. As they are also behaving very similar
across time we expect a high correlation and a strong linear model
explaining the interest in Germany with the interest in the US.

### Prepare the data for modelling and checking all correlations

As initial step we have to prepare the data. We use the daily data as we
want to have data as rich as possible for modelling. For the linear
regression model `lm()` we need separate columns for iPhone search
interest per country. As a first analysis we calculate all correlations
and visualize them with `corrplot`. Especially the correlations between
iPhone_DE and iPhone_US are close to 1 (0.93).

```{r}

## Prepare data for the modelling
lm_data <- trends_combined %>%
  select(date, country, iPhone) %>% 
  pivot_wider(names_from = country, values_from = iPhone, names_prefix = "iPhone_")

## Calculate the correlation coefficients
correlation_matrix <- lm_data %>%
  select(where(is.numeric)) %>%
  cor(use = "complete.obs")

## Look at the correlations
corrplot(correlation_matrix, method = "number", type = "upper",
         tl.col = "black", tl.srt = 45, mar = c(1, 0, 1, 0))

```

### Fitting a linear model

With the data already prepared the fitting of a linear model is straight
forward and with `summary()` we get all relevant information about the
fit.

```{r}

## Fit the linear regression model and show a summary
model <- lm(iPhone_DE ~ iPhone_US, data = lm_data)
summary(model)

```

As expected the linear regression model shows a strong relation between
the Google search interest in iPhone between the US and Germany: The
p-value of the model is close to 0 and therefore significant. The same
is true for the iPhone_US estimate of 0.878. This means an increase of
interest by 1 in the US goes along with an increase of interest in
Germany by 0.878.

### Visualize the linear regression and the quality of the model

We do four visualizations for the model. First a scatter plot showing
all data points (i.e. days) with iPhone_US on the x and iPhone_DE on the
y axis. We add a line for the perfect correlation (y = x) and the
regression line calculated with the model. Therefore we extract
intercept and slope from the coefficients that we received when fitting
the model.

Then we do three standard graphs that are used to check the quality of a
linear regression model:

-   Residuals vs. Fitted to check linearity and constant variance: Any
    clear pattern indicates an issue.
-   Q-Q-plot of Residuals to check the normal distribution of errors.
    Points should follow the line.
-   Observed vs. Fitted to check visually how good model accuracy and
    predictive power are.

```{r, message=FALSE}

# Add fitted values & residuals
lm_data$fitted <- fitted(model)
lm_data$residuals <- residuals(model)

# Extract coefficients for regression line
coef_intercept <- coef(model)[1]
coef_slope <- coef(model)[2]

## Scatterplot with regression line (from model)
plot_1 <- ggplot(lm_data, aes(x = iPhone_US, y = iPhone_DE)) +
  geom_point(alpha = 0.7, size = 2, color = "darkblue") +
  geom_abline(
    aes(intercept = 0, slope = 1, color = "Perfect Correlation (y = x)"),
    linetype = "dashed", alpha = 0.7) +
  geom_abline(
    aes(intercept = coef_intercept, slope = coef_slope, color = "Regression Line"),
    size = 1) +
  scale_color_manual(
    name = "Reference line:",
    values = c("Perfect Correlation (y = x)" = "red",
               "Regression Line" = "blue")) +
  labs(
    title = "Google searches Germany vs USA", ,
    x = "iPhone USA",
    y = "iPhone Germany",
    caption = "Source: Google Trends. Each point represents a day from 2017-11-14 to 2018-06-14.") +
  theme_minimal() +
  theme(legend.position = "bottom"
  )

## Residuals vs Fitted
plot_2 <- ggplot(lm_data, aes(fitted, residuals)) +
  geom_point(alpha = 0.7, color = "darkblue") +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Residuals vs Fitted", x = "Fitted", y = "Residuals") +
  theme_minimal()

## Q-Q Plot
plot_3 <- ggplot(lm_data, aes(sample = residuals)) +
  stat_qq(alpha = 0.7, color = "darkblue") +
  stat_qq_line(color = "red") +
  labs(title = "Q-Q Plot of Residuals") +
  theme_minimal()

## Observed vs Fitted
plot_4 <- ggplot(lm_data, aes(fitted, iPhone_DE)) +
  geom_point(alpha = 0.7, color = "darkblue") +
  geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
  labs(title = "Observed vs Fitted", x = "Fitted", y = "Observed") +
  theme_minimal()

## Arrange plots
# (plot_1 | plot_2) / (plot_3 | plot_4)

plot_1
plot_2
plot_3
plot_4

```

To keep the story short: There are no major issues with the model. It is
explaining the Google search interest in Germany very well with the
Google search interest in the US. Therefore the result of the analysis
confirms our initial expectation.

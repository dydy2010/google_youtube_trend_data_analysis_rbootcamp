---
editor: 
  markdown: 
    wrap: 72
---

## Scatterplot Tesla Youtube-views vs. Youtube-likes

```{r echo=FALSE, message=FALSE}

## Prepare data

plot_data <- aggregated_youtube_data_final %>% 
  filter(keyword == 'Rolex') %>% 
  select(trending_date, total_views, total_likes) %>% 
  mutate(engagement = total_likes / total_views)

## Plot the scatter plot

ggplot(plot_data, aes(x = total_views, y = engagement)) +
  geom_point(alpha = 0.6, size = 2, color = "darkblue") +
  scale_x_continuous(labels = scales::number, expand = expansion(mult = c(0, 0.1))) +
  geom_smooth(method = 'lm', se = FALSE) +
  labs(
    title = "Correlation between engagement with and views of Rolex YouTube videos",
    x = "Total Views",
    y = "Engagement: Likes / Views",
    caption = "Source: Google Trends. Each point represents a day from 2017-11-14 to 2018-06-14."
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    panel.grid.minor = element_blank()
  )

```

## Barchart Brand comparison of YouTube-Engagement (i.e. likes / views and dislikes / views)

```{r echo=FALSE, message=FALSE}

## Prepare data

plot_data <- aggregated_youtube_data_final %>% 
  select(trending_date, keyword, total_views, total_likes, total_dislikes) %>% 
  group_by(keyword) %>% 
  summarise(total_views = sum(total_views),
            total_likes = sum(total_likes),
            total_dislikes = sum(total_dislikes)) %>% 
  mutate(like_ratio = total_likes / total_views,
         dislike_ratio = total_dislikes / total_views) %>% 
  mutate(keyword = factor(keyword, levels = c('iPhone', 'Tesla', 'Rolex')))

## Make the column plot

# ggplot(plot_data,aes(x = keyword, y = like_ratio)) +
#   geom_col(fill = "darkblue") +
#   geom_text(aes(label = sprintf("%.3f", like_ratio)),
#             vjust = -0.5, size = 3.2) +
#   scale_y_continuous(limits = c(0, 0.05)) +
#   theme_minimal() +
#   labs(
#     title = "Brand comparison of YouTube video engagement",
#     x = "Keywords",
#     y = "Engagement (total likes / total views)",
#     caption = "Source: Kaggle dataset Youtube (November 2017 to Juin 2018)"
#   )

## Make a combined column plot for like- and dislike-ratio

## Convert to long format: one column for metric type, one for value
plot_long <- plot_data %>%
  pivot_longer(cols = c(like_ratio, dislike_ratio),
               names_to = "metric",
               values_to = "ratio")

## Plot with grouped bars
ggplot(plot_long, aes(x = keyword, y = ratio, fill = metric)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = sprintf("%.3f", ratio)),
            vjust = -0.5, size = 3.2,
            position = position_dodge(width = 0.9)) +
  scale_y_continuous(limits = c(0, 0.05)) +
  scale_fill_manual(values = c("like_ratio" = "darkblue",
                               "dislike_ratio" = "firebrick")) +
  theme_minimal() +
  labs(
    title = "Brand comparison of YouTube video engagement",
    x = "Keywords",
    y = "Engagement (likes/dislikes per views)",
    fill = "Metric",
    caption = "Source: Kaggle dataset Youtube (Nov 2017 â€“ Jun 2018)"
  )



```

## Longevity of selected YouTube-videos

```{r echo=FALSE, message=FALSE}

## Prepare data

plot_data <- relevant_videos %>% 
  select(video_id, trending_date, views, keyword) %>% 
  group_by(video_id, trending_date, keyword) %>% 
  summarise(total_views = sum(views))

# plot_data %>% 
#   group_by(keyword) %>%
#   slice_max(total_views, n = 1) %>%
#   ungroup()

plot_data <- plot_data %>% 
  filter(video_id %in% c("RgpoRGq3oBs",	"WpqUOW19aJQ", "2fGXDFiFBhg"))

## Make the line graph

plot_data %>%
  ggplot(aes(x = trending_date, y = total_views, colour = keyword)) +
  geom_line(linewidth = .6) +
  labs(
    title = "YouTube most watched videos: Development over time",
    y = "Relative importance on that day",
    caption = "Source: Google Trends (2017-11-14 to 2018-06-14)"
  ) +
  theme_minimal()

```
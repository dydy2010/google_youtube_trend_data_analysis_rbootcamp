---
editor: 
  markdown: 
    wrap: 72
---

## Install/Load libraries

```{r echo=FALSE}

# library(gtrendsR)  # Downloading was blocked after 3 downloads
library(tidyverse)
library(lubridate)
library(sf)
library(rnaturalearth)
library(gtrendsR)
library(countrycode)

```

## prepare and merge data manually downloaded from Google Trends

```{r}

# Google Trends CSV-Dateien importieren und zusammenführen

# Funktion zum Einlesen und Aufbereiten der CSV-Dateien

process_trends_csv <- function(filepath, country_code) {
  # CSV einlesen und erste 2 Zeilen überspringen
  data <- read.csv(filepath, skip = 2, stringsAsFactors = FALSE)
  
  # Spaltennamen einheitlich setzen
  colnames(data) <- c("date", "iPhone", "Tesla", "Rolex")

  # <1 Werte in allen Trend-Spalten zu 0 ändern
  trend_columns <- c("iPhone", "Tesla", "Rolex")

  data <- data %>%
    mutate(across(all_of(trend_columns),
                  ~ as.numeric(str_replace(., "<1", "0"))))
    
  # Datum konvertieren
  data$date <- as.Date(data$date)
  
  # Country-Spalte hinzufügen
  data$country <- country_code
  
  return(data)
  }

```

## Alle drei CSV-Dateien einlesen

```{r}

trends_US <- process_trends_csv("./raw_data_from_google/multiTimeline_US.csv", "US")
trends_MX <- process_trends_csv("./raw_data_from_google/multiTimeline_MX.csv", "MX")
trends_DE <- process_trends_csv("./raw_data_from_google/multiTimeline_DE.csv", "DE")
trends_FR <- process_trends_csv("./raw_data_from_google/multiTimeline_FR.csv", "FR")
trends_JP <- process_trends_csv("./raw_data_from_google/multiTimeline_JP.csv", "JP")

# Alle Daten zusammenführen und nach Datum und Land sortieren
trends_combined <- rbind(trends_US, trends_MX, trends_DE, trends_FR, trends_JP) %>%
  arrange(date, country)

# Investigate the data
# str(trends_combined)
# head(trends_combined)
# View(trends_combined)
# summary(trends_combined)
# table(trends_combined$country)


# Daten in long format für Visualisierung
trends_long <- trends_combined %>%
  pivot_longer(
    cols = c(`iPhone`, `Tesla`, `Rolex`),
    names_to = "keyword",
    values_to = "hits"
  )

# head(trends_long, 10)
# View(trends_long)

```

# Speichern der kombinierten Daten

```{r}

# write.csv(trends_combined, "trends_combined_wide.csv", row.names = FALSE)
# write.csv(trends_long, "trends_combined_long.csv", row.names = FALSE)

```

## Google Trends data

The numbers from 0 to 100 on Google Trends represent normalized,
relative search interest, not an absolute number of search queries. The
value 100 indicates the peak popularity of a search term in a selected
time period and region. All other values are relative to this peak
value. A value of 0 means that there is insufficient data or that the
search term has a very low search volume.

How the numbers work:

1.  Normalization: Google Trends normalizes the data on a scale from 0
    to 100 to represent search interest in relation to all search
    queries.
2.  Relative values: The numbers are not absolute quantities, but show
    how often a term was searched for in comparison to its own peak.
3.  The number 100: This represents the time or region when a search
    term reached its peak popularity.
4.  The number 0: This means that there was insufficient data for the
    search term at that time or in that region.
5.  Example: If a search term receives a 50, this means that search
    interest was only half as high as the peak value, which is 100.

Source:

## Facet line chart for all combinations of country & keyword.

```{r}

trends_long %>%
  ggplot(aes(x = date, y = hits)) +
  geom_line(colour = "darkblue", linewidth = .6) +
  labs(
    title = "Google Trends searches",
    y = "Relative importance on that day",
    caption = "Source: Google Trends (2017-11-14 to 2018-06-14)"
  ) +
  facet_wrap(~ country + keyword, nrow = 5, ncol = 3) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    panel.grid.minor = element_blank()
  )

```

## Scatterplot Keyword 1 vs. Keyword 2 for all countries

```{r echo=FALSE, message=FALSE}

ggplot(trends_combined, aes(x = Tesla, y = Rolex)) +
  geom_point(alpha = 0.6, size = 2, color = "darkblue") +
  geom_smooth(method = 'lm', se = TRUE) +
  labs(
    title = "Correlation between Tesla and Rolex in Google Trends searches",
    x = "Tesla",
    y = "Rolex",
    caption = "Source: Google Trends. Each point represents a day from 2017-11-14 to 2018-06-14."
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    panel.grid.minor = element_blank()
  )

```

## Scatterplot iPhone US vs. iPhone DE

```{r echo=FALSE, message=FALSE}

# Daten umstrukturieren
plot_data <- trends_combined %>% 
  filter(country %in% c("US", "DE")) %>% 
  select(date, country, iPhone) %>% 
  pivot_wider(names_from = country, values_from = iPhone, names_prefix = "iPhone_")

# Scatterplot erstellen
ggplot(plot_data, aes(x = iPhone_US, y = iPhone_DE)) +
  geom_point(alpha = 0.7, size = 2, color = "darkblue") +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red", alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(
    title = "iPhone searches: USA vs Germany",
    x = "iPhone USA",
    y = "iPhone Germany",
    caption = "Source: Google Trends. Each point represents a day from 2017-11-14 to 2018-06-14."
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14),
    axis.title = element_text(size = 12)
  )

```

## Rolex bar chart with seasonality of Google Trends

```{r}

# res <- gtrends(
#   keyword = "Rolex",
#   geo     = "",
#   time    = "2018-01-01 2018-12-31")
# 
# write.csv(res$interest_over_time, "./raw_data_from_google/gtrends_Rolex_all_countries_year_2018.csv")

google_Rolex_2018 <- read.csv("./raw_data_from_google/gtrends_Rolex_all_countries_year_2018.csv")

plot_data <- google_Rolex_2018 %>% 
  select(date, hits) %>% 
  filter(date > "2018-01-01")

## Prepare month axis
# plot_data <- plot_data %>%
#   mutate(month_abbr = factor(month(month, label = TRUE, abbr = TRUE),
#                             levels = c("Nov", "Dez", "Jan", "Feb", "Mär", "Apr", "Mai", "Jun")))

## Make the bar chart
ggplot(plot_data, aes(x = date, y = hits)) +
  geom_col(fill = "darkblue") +
  labs(
    title = "Rolex searches worldwide 2018 by week",
    x = "Weeks 2018",
    y = "Relative search interest (100 for month with most searches",
    caption = "Source: Google Trends (2018-01-01 to 2018-12-31)"
  ) +
  scale_y_continuous(limits = c(0, 100)) +
  theme_minimal() +
  theme(
    axis.text.x = element_blank(),  # Remove x-axis text labels
    axis.ticks.x = element_blank()   # Remove x-axis ticks
  )

```

## World map with Google Trends data for Tesla

```{r, warning=FALSE}

## Get global Google searches for Tesla with country codes (geo = "world")
# res <- gtrends(
#   keyword = "Tesla",
#   geo     = "",
#   time    = "2017-11-14 2018-06-14"
# )
# 
# country_data_Tesla <- res$interest_by_country %>%
#   mutate(
#     iso2c = countrycode(location, "country.name", "iso2c",
#                         custom_match = c("Kosovo" = "XK")),
#     iso3c = countrycode(location, "country.name", "iso3c",
#                         custom_match = c("Kosovo" = "XKX")),
#     hits = case_when(
#       hits == "<1" ~ 0,
#       is.na(hits) ~ 0,
#       TRUE ~ as.numeric(hits)
#       )) %>%
#   select(iso2c, iso3c, country = location, hits, keyword) %>%
#   arrange(desc(hits))
# 
# write.csv(country_data_Tesla, "./raw_data_from_google/gtrends_Tesla_all_countries.csv", row.names = FALSE)

country_data_Tesla <- read.csv("./raw_data_from_google/gtrends_Tesla_all_countries.csv")

# head(country_data)

## Get world map data (some countries like France have -99 in iso_a2 and/or iso_a3)
world_sf <- ne_countries(scale = "medium", returnclass = "sf") %>% 
  mutate(iso_a2 = iso_a2_eh,
         iso_a3 = iso_a3_eh,
         iso_n3 = iso_n3_eh)

## Join by ISO3
world_trends <- world_sf %>%
  left_join(country_data_Tesla, by = c("iso_a3" = "iso3c"))

## Check data
# head(world_trends %>% select(name, iso_a3, keyword, hits))

## Produce map
ggplot() +
  geom_sf(data = world_trends, 
          aes(fill = hits), 
          color = "white") +
  scale_fill_gradientn(colors = c("#DEEBF7", "#9ECAE1", "#6BAED6", "#4292C6", "#2171B5",
                                  "#08519C", "#08306B", "#062254", "#041A3C")) +
  labs(
    title = "Google Trends: Interest in Tesla",
    subtitle = "Average interest across time (min = 0, max 100)",
    caption = "Source: Google Trends (2017-11-14 to 2018-06-14)"
  ) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank())

```
